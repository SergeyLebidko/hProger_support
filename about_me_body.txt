В школе мне всегда легко давались точные науки - алгебра, геометрия,
физика и информатика. Я несколько раз участвовал в олимпиадах по
информатике и занимал там призовые места. Естественно, что после школы я
планировал "пойти на программиста", но по причинам, от меня не зависящим,
пришлось выбрать несколько иную специальность, которая называлась
"Прикладная информатика в экономике".
*
Так как учился я заочно, то и работать начал рано: в 18 лет. Был оператором ЭВМ,
затем устроился инженером по автоматизации. За десять последующих лет сменил
несколько мест работы. Но везде занимался, по сути, обеспечением работы парка
компьютерной и оргтехники. Помощь пользователям, заправка картриджей, установка
и настройка необходимого для работы офиса ПО, ведение документации (что практически
везде и всегда отнимало массу времени).
*
Однако работа не приносила ни удовлетворения, ни желаемых доходов. Хотелось чего-то
более творческого и более прибыльного. К тому же, будучи, по сути, эникейщиком, я не мог
считать себя полноценным IT-специалистом. В сущности, я был просто очень
продвинутям пользователем.
*
И я решил вернуться к оставленным еще в школе занятиям программированием.
*
Следует заметить, что в ВУЗе у нас был небольшой курс программирования на ЯВУ (языке
высокого уровня). Но этим языком преподавателями был выбран уже тогда считавшийся устаревшим Pascal.
Я легко сдал экзамен по этому предмету и это придало мне уверенности. Но так как Pascal к тому времени
окончательно канул в лету, то надо было выбрать другой язык.
*
Я выбрал {Java}.
*
{Java} на тот момент была в топе языков программирования и, уж конечно, её не могла постигнуть
участь {Pascal} в сколько-нибудь обозримом будущем. Начал я с базового самоучителя Герберта Шилдта по
основам {Java} и постепенно от самых основ продвигался все дальше. Я завел github-аккаунт (довольно долгое
время используя его только как средство удобного разделения работы между офисным и домашним компьютерами,
благо тогда была возможность немного кодить еще и на работе).
*
На {Java} были написаны мои первые проекты. Их репозитории до сих пор остались в моём github и я не
планирую их оттуда удалять. Хотя сейчас я уже не занимаюсь этим языком, но не считаю время, потраченное на
его изучение проведенным зря. {Java} дала мне очень много. Я познакомился с такими понятиями как ООП (и его
базовыми принципами: наследованием, инкапсуляцией и полиморфизмом), научился разбивать код на отдельные модули,
познакомился со статической типизацией, узнал, что такое методы и базовые структуры данных - массив, список,
стек, дек, хэш-таблица. {Java} заложила, как мне кажется, неплохой фундамент.
*
Но я все чаще начал слышать о языке {Python} и решил познакомится и с ним. Вначале, чтобы просто иметь о нем
какое-то общее представление. И {Python} меня затянул. Великолепный язык, превосходящий {Java} в очень многих аспектах!
*
Так как одной из сфер практического применения {Python} является web-разработка, я начал двигаться в этом
направлении. Так я узнал о фреймворке {Django} и начал писать на нем простейшие проекты.
*
Однако, проекты, которые можно делать, используя только лишь {Python}, {HTML} и {CSS} сильно страдают из-за отсутствия
интерактивности страниц. Я понял, что без хотя бы минимального понимания {JavaScript} не обойтись. Так я познакомился
с языком, о котором сделано больше всего мемов :) Первой {JS}-библиотекой, с которой я начал работать была {jQuery}.
*
{jQuery} очень помогал мне с созданием кода для простых операций, типа добавления и удаления элементов (а особенно с
выполнением ajax-запросов). Но я быстро понял, что она совершенно не пригодна тогда, когда на странице много элементов,
состояние которых должно быть взаимосвязано.
*
Мне нужно было что-то, с чем можно было бы легко организовать отдельные элементы страниц в компоненты и управлять
взаимодействием этих компонентов. Так я узнал о {React} и его подходе к созданию компонентов.
*
Сейчас я параллельно занимаюсь языком {Python}, пишу код на {React} (в том числе и этот сайт) и ищу работу.
От работодателя, помимо очевидных вещей - оформления по ТК этой страны, белой ЗП - хочу также получить возможность
набраться реального опыта на реальных проектах и в общении с более скилловыми коллегами (самообразование и работа
над pet-проектами - это, конечно, хорошо, но реальный "боевой" опыт они заменить не могут).
*
Что касается стека, то я мог бы продолжить развитие как в {React} (frontend), так и в {Django} (backend).